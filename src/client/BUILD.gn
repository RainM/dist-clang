import("//build/template/protobuf.gni")

executable("clang") {
  sources = [
    "clang_main.cc",
  ]

  deps += [
    ":client",
    ":configuration",
    "//src/base:base",
    "//src/base:logging",
  ]
}

# Separate source set for unit-tests.
source_set("client") {
  visibility += [ "//src/test:unit_tests" ]

  sources = [
    "clang.cc",
    "clang.h",
  ]

  deps += [
    ":command",
    "//src/base:base",
    "//src/base:logging",
    "//src/net:net",
    "//src/net:net_proto",
  ]
}

# NOTICE: Uses custom libclang ldflags, thus, have to be shared library.
shared_library("command") {
  visibility = []
  visibility = [
    ":*",
    "//:*",
    "//src/test:unit_tests",
    "//tools/args_parser",
  ]

  sources = [
    "clang_command.cc",
    "clang_command.hh",
    "clean_command.cc",
    "clean_command.hh",
    "command.cc",
    "command.hh",
    "driver_command.cc",
    "driver_command.hh",
  ]

  configs += [ "//build/config:libclang" ]

  deps += [
    "//src/base:base",
    "//src/base:logging",
  ]

  public_configs = [ "//build/config:libclang_includes" ]
}

source_set("configuration") {
  visibility += [ "//tools/args_parser" ]

  sources = [
    "configuration.cc",
    "configuration.hh",
  ]

  deps += [
    ":config_proto",
    "//src/base:base",
    "//src/base:logging",
  ]
}

protobuf("config_proto") {
  visibility = [ "//tools/args_parser" ]

  sources = [
    "configuration.proto",
  ]
}
