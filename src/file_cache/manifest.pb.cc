// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manifest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "manifest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dist_clang {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* Manifest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Manifest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_manifest_2eproto() {
  protobuf_AddDesc_manifest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "manifest.proto");
  GOOGLE_CHECK(file != NULL);
  Manifest_descriptor_ = file->message_type(0);
  static const int Manifest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Manifest, stderr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Manifest, object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Manifest, deps_),
  };
  Manifest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Manifest_descriptor_,
      Manifest::default_instance_,
      Manifest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Manifest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Manifest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Manifest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_manifest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Manifest_descriptor_, &Manifest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_manifest_2eproto() {
  delete Manifest::default_instance_;
  delete Manifest_reflection_;
}

void protobuf_AddDesc_manifest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016manifest.proto\022\020dist_clang.proto\"M\n\010Ma"
    "nifest\022\025\n\006stderr\030d \001(\010:\005false\022\025\n\006object\030"
    "e \001(\010:\005false\022\023\n\004deps\030f \001(\010:\005false", 113);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "manifest.proto", &protobuf_RegisterTypes);
  Manifest::default_instance_ = new Manifest();
  Manifest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_manifest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_manifest_2eproto {
  StaticDescriptorInitializer_manifest_2eproto() {
    protobuf_AddDesc_manifest_2eproto();
  }
} static_descriptor_initializer_manifest_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Manifest::kStderrFieldNumber;
const int Manifest::kObjectFieldNumber;
const int Manifest::kDepsFieldNumber;
#endif  // !_MSC_VER

Manifest::Manifest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Manifest::InitAsDefaultInstance() {
}

Manifest::Manifest(const Manifest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Manifest::SharedCtor() {
  _cached_size_ = 0;
  stderr_ = false;
  object_ = false;
  deps_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Manifest::~Manifest() {
  SharedDtor();
}

void Manifest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Manifest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Manifest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Manifest_descriptor_;
}

const Manifest& Manifest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manifest_2eproto();
  return *default_instance_;
}

Manifest* Manifest::default_instance_ = NULL;

Manifest* Manifest::New() const {
  return new Manifest;
}

void Manifest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stderr_ = false;
    object_ = false;
    deps_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Manifest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool stderr = 100 [default = false];
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stderr_)));
          set_has_stderr();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(808)) goto parse_object;
        break;
      }

      // optional bool object = 101 [default = false];
      case 101: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_object:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &object_)));
          set_has_object();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(816)) goto parse_deps;
        break;
      }

      // optional bool deps = 102 [default = false];
      case 102: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_deps:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deps_)));
          set_has_deps();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Manifest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool stderr = 100 [default = false];
  if (has_stderr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(100, this->stderr(), output);
  }

  // optional bool object = 101 [default = false];
  if (has_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(101, this->object(), output);
  }

  // optional bool deps = 102 [default = false];
  if (has_deps()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(102, this->deps(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Manifest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool stderr = 100 [default = false];
  if (has_stderr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(100, this->stderr(), target);
  }

  // optional bool object = 101 [default = false];
  if (has_object()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(101, this->object(), target);
  }

  // optional bool deps = 102 [default = false];
  if (has_deps()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(102, this->deps(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Manifest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool stderr = 100 [default = false];
    if (has_stderr()) {
      total_size += 2 + 1;
    }

    // optional bool object = 101 [default = false];
    if (has_object()) {
      total_size += 2 + 1;
    }

    // optional bool deps = 102 [default = false];
    if (has_deps()) {
      total_size += 2 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Manifest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Manifest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Manifest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Manifest::MergeFrom(const Manifest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stderr()) {
      set_stderr(from.stderr());
    }
    if (from.has_object()) {
      set_object(from.object());
    }
    if (from.has_deps()) {
      set_deps(from.deps());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Manifest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Manifest::CopyFrom(const Manifest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Manifest::IsInitialized() const {

  return true;
}

void Manifest::Swap(Manifest* other) {
  if (other != this) {
    std::swap(stderr_, other->stderr_);
    std::swap(object_, other->object_);
    std::swap(deps_, other->deps_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Manifest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Manifest_descriptor_;
  metadata.reflection = Manifest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace dist_clang

// @@protoc_insertion_point(global_scope)
