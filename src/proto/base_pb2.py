# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/base.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/base.proto',
  package='dist_clang.proto',
  serialized_pb=_b('\n\x10proto/base.proto\x12\x10\x64ist_clang.proto\"$\n\x06Plugin\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\"T\n\x08\x43ompiler\x12\x0f\n\x07version\x18\x01 \x02(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12)\n\x07plugins\x18\x03 \x03(\x0b\x32\x18.dist_clang.proto.Plugin')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_PLUGIN = _descriptor.Descriptor(
  name='Plugin',
  full_name='dist_clang.proto.Plugin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='dist_clang.proto.Plugin.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='dist_clang.proto.Plugin.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=74,
)


_COMPILER = _descriptor.Descriptor(
  name='Compiler',
  full_name='dist_clang.proto.Compiler',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='dist_clang.proto.Compiler.version', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='dist_clang.proto.Compiler.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='plugins', full_name='dist_clang.proto.Compiler.plugins', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=160,
)

_COMPILER.fields_by_name['plugins'].message_type = _PLUGIN
DESCRIPTOR.message_types_by_name['Plugin'] = _PLUGIN
DESCRIPTOR.message_types_by_name['Compiler'] = _COMPILER

Plugin = _reflection.GeneratedProtocolMessageType('Plugin', (_message.Message,), dict(
  DESCRIPTOR = _PLUGIN,
  __module__ = 'proto.base_pb2'
  # @@protoc_insertion_point(class_scope:dist_clang.proto.Plugin)
  ))
_sym_db.RegisterMessage(Plugin)

Compiler = _reflection.GeneratedProtocolMessageType('Compiler', (_message.Message,), dict(
  DESCRIPTOR = _COMPILER,
  __module__ = 'proto.base_pb2'
  # @@protoc_insertion_point(class_scope:dist_clang.proto.Compiler)
  ))
_sym_db.RegisterMessage(Compiler)


# @@protoc_insertion_point(module_scope)
